version: '3'
networks:
   db-net:
     internal: true
   proxy:
     driver: bridge

services:
   landing:
      image: nginx
      container_name: landing
      restart: always
      volumes:
        - ./landing/frontend:/usr/share/nginx/html:ro
        - ./landing/conf/landing.conf:/etc/nginx/conf.d/default.conf:ro
      links:
        - error
        - php
      networks:
        - proxy
      environment:
        VIRTUAL_HOST: ${DOMAIN}
        VIRTUAL_PORT: 80
        LETSENCRYPT_HOST: ${DOMAIN}
        LETSENCRYPT_EMAIL: ${EMAIL}

   php:
      image: php:fpm-alpine
      container_name: php
      volumes:
        - ./landing/frontend:/script:ro
        - ./admin/services/contact:/result
      networks:
        - proxy


   error:
      image: nginx
      container_name: error
      restart: always
      volumes:
        - ./error/front:/usr/share/nginx/html:ro
        - ./error/conf/error.conf:/etc/nginx/conf.d/default.conf:ro
      networks:
        - proxy

   nginx:
      image: jwilder/nginx-proxy:alpine
      container_name: nginx
      restart: always
      labels:
        com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy: 'true'
      ports:
        - 80:80
        - 443:443
      volumes:
        - ./proxy/logs/global:/var/log/nginx
        - ./proxy/conf/proxy.conf:/etc/nginx/conf.d/proxy.conf:ro
        - ./proxy/vhost:/etc/nginx/vhost.d
        - ./proxy/passwd:/etc/nginx/htpasswd
        - ./proxy/logs/services:/customlogs/
        - /srv/nginx/data/html:/usr/share/nginx/html
        - /srv/nginx/data/certs:/etc/nginx/certs:ro
        - /var/run/docker.sock:/tmp/docker.sock:ro
      networks:
        - proxy

   letsencrypt:
      image: jrcs/letsencrypt-nginx-proxy-companion
      container_name: letsencrypt
      volumes:
        - ./proxy/vhost:/etc/nginx/vhost.d
        - /srv/nginx/data/certs:/etc/nginx/certs:rw
        - /srv/nginx/data/html:/usr/share/nginx/html
        - /var/run/docker.sock:/var/run/docker.sock:ro
      depends_on:
        - nginx
      networks:
        - proxy

volumes:
  db:
